//
// Copyright (c) 2016 Hiale
//
// Distributed under MIT License. (See https://opensource.org/licenses/MIT)
//
//
//
// Generated by

#pragma once

#include <map>
#define WIN32_LEAN_AND_MEAN
#include <windows.h>

enum class AnchorStyle : int
{
	None = 0,
	Top = 1,
	Bottom = 2,
	Left = 4,
	Right = 8
};

inline AnchorStyle operator |(AnchorStyle a, AnchorStyle b)
{
	return static_cast<AnchorStyle>(static_cast<int>(a) | static_cast<int>(b));
}

inline AnchorStyle operator &(AnchorStyle a, AnchorStyle b)
{
	return static_cast<AnchorStyle>(static_cast<int>(a) & static_cast<int>(b));
}

class ControlResizer
{
public:
	void init(HWND hWnd);
	void addControl(HWND hwndCtl, const AnchorStyle& anchorStyle);
	void addControl(int ctlId, const AnchorStyle& anchorStyle);
	void removeControl(HWND hwndCtl);
	void removeControl(int ctlId);
	void removeAll();
	void onResize();
private:
	class ControlResizerItem
	{
	public:
		HWND hWnd;
		AnchorStyle anchorStyle;
		RECT rect;
	};
	HWND hWnd;
	RECT rectOld;
	std::map<HWND, ControlResizerItem> controls;
};

